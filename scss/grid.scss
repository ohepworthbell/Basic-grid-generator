// Set up default sizes
// -----------------------------------------
[class^="col-"], [class*=" col-"] {
  display: block;
  float: left;
  margin: 0 0 20px 20px;
  box-sizing: border-box;
  }


// Convert breakpoint numbers into breakpoints settings
// -----------------------------------------
$breakpoints: (
  ($break_desktop, null),
  ($break_tablet, ($break_desktop - 1)),
  ($break_phablet, ($break_tablet - 1)),
  ($break_mobile, ($break_phablet - 1)),
  (0px, ($break_mobile - 1))
);


// Create that lovely grid
// -----------------------------------------
@mixin create_grid($grid_gutter, $count) {
  [class^="col-"], [class*=" col-"] {
    margin: 0 0 0 $grid_gutter;
    }

  // Reset base column-viewport
  // -----------------------------------------
  $base: 0;


  // Loop through breakpoint values
  // -----------------------------------------
  @each $min, $max in $breakpoints {
    @if $max {
      @media (min-width: #{$min}) and (max-width: #{$max}) {
        @for $i from ($count - $base) through (2 - $base) {
          $grid_width: (100% / ($i));

          @if $grid_width == Infinity or $grid_width == 100% or $grid_width < 0 {
            .col-#{$i + $base} {
              width: 100%;
              margin-left: 0;

              &:not(:first-child) {
                margin-top: #{$grid_gutter};
                }
              }
            }

          @else {
            $grid_spacing: (($grid_gutter * ($i - 1))/$i);

            .col-#{$i + $base} {
              width: calc(#{$grid_width} - #{$grid_spacing});

              &:nth-of-type(#{$i}n+1) {
                margin-left: 0;
                clear: both;
                }
              }
            }

          .col-#{$i + $base}:nth-of-type(n+#{$count - $base + 1}) {
            margin-top: #{$grid_gutter};
            }
          }
        }
      }
    @else {
      @media (min-width: #{$min}) {
        @for $i from ($count - $base) through (2 - $base) {
          $grid_width: (100% / ($i));

          @if $grid_width == Infinity or $grid_width == 100% or $grid_width < 0 {
            .col-#{$i + $base} {
              width: 100%;
              margin-left: 0;

              &:not(:first-child) {
                margin-top: #{$grid_gutter};
                }
              }
            }

          @else {
            $grid_spacing: (($grid_gutter * ($i - 1))/$i);

            .col-#{$i + $base} {
              width: calc(#{$grid_width} - #{$grid_spacing});

              &:nth-of-type(#{$i}n+1) {
                margin-left: 0;
                clear: both;
                }
              }
            }

          .col-#{$i + $base}:nth-of-type(n+#{$count - $base + 1}) {
            margin-top: #{$grid_gutter};
            }
          }
        }
      }

    $base: $base + 1;
    }
  }
